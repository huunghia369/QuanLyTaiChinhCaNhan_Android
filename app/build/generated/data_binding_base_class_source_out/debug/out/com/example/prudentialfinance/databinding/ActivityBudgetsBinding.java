// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBudgetsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton budgetAdd;

  @NonNull
  public final ImageButton budgetBack;

  @NonNull
  public final ImageButton budgetPdf;

  @NonNull
  public final SearchView budgetSearch;

  @NonNull
  public final SwipeRefreshLayout refreshLayoutBudget;

  @NonNull
  public final RecyclerView rvBudgets;

  @NonNull
  public final TextView topTitle;

  private ActivityBudgetsBinding(@NonNull LinearLayout rootView, @NonNull ImageButton budgetAdd,
      @NonNull ImageButton budgetBack, @NonNull ImageButton budgetPdf,
      @NonNull SearchView budgetSearch, @NonNull SwipeRefreshLayout refreshLayoutBudget,
      @NonNull RecyclerView rvBudgets, @NonNull TextView topTitle) {
    this.rootView = rootView;
    this.budgetAdd = budgetAdd;
    this.budgetBack = budgetBack;
    this.budgetPdf = budgetPdf;
    this.budgetSearch = budgetSearch;
    this.refreshLayoutBudget = refreshLayoutBudget;
    this.rvBudgets = rvBudgets;
    this.topTitle = topTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBudgetsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBudgetsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_budgets, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBudgetsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.budget_add;
      ImageButton budgetAdd = ViewBindings.findChildViewById(rootView, id);
      if (budgetAdd == null) {
        break missingId;
      }

      id = R.id.budget_back;
      ImageButton budgetBack = ViewBindings.findChildViewById(rootView, id);
      if (budgetBack == null) {
        break missingId;
      }

      id = R.id.budget_pdf;
      ImageButton budgetPdf = ViewBindings.findChildViewById(rootView, id);
      if (budgetPdf == null) {
        break missingId;
      }

      id = R.id.budget_search;
      SearchView budgetSearch = ViewBindings.findChildViewById(rootView, id);
      if (budgetSearch == null) {
        break missingId;
      }

      id = R.id.refresh_layout_budget;
      SwipeRefreshLayout refreshLayoutBudget = ViewBindings.findChildViewById(rootView, id);
      if (refreshLayoutBudget == null) {
        break missingId;
      }

      id = R.id.rv_budgets;
      RecyclerView rvBudgets = ViewBindings.findChildViewById(rootView, id);
      if (rvBudgets == null) {
        break missingId;
      }

      id = R.id.topTitle;
      TextView topTitle = ViewBindings.findChildViewById(rootView, id);
      if (topTitle == null) {
        break missingId;
      }

      return new ActivityBudgetsBinding((LinearLayout) rootView, budgetAdd, budgetBack, budgetPdf,
          budgetSearch, refreshLayoutBudget, rvBudgets, topTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
