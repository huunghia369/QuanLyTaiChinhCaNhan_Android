// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SlideLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView descriptionSlide;

  @NonNull
  public final ImageView imageSlide;

  @NonNull
  public final FrameLayout introPhotoLayout;

  @NonNull
  public final TextView titleSlide;

  private SlideLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView descriptionSlide,
      @NonNull ImageView imageSlide, @NonNull FrameLayout introPhotoLayout,
      @NonNull TextView titleSlide) {
    this.rootView = rootView;
    this.descriptionSlide = descriptionSlide;
    this.imageSlide = imageSlide;
    this.introPhotoLayout = introPhotoLayout;
    this.titleSlide = titleSlide;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SlideLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SlideLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.slide_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SlideLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description_slide;
      TextView descriptionSlide = ViewBindings.findChildViewById(rootView, id);
      if (descriptionSlide == null) {
        break missingId;
      }

      id = R.id.image_slide;
      ImageView imageSlide = ViewBindings.findChildViewById(rootView, id);
      if (imageSlide == null) {
        break missingId;
      }

      id = R.id.introPhotoLayout;
      FrameLayout introPhotoLayout = ViewBindings.findChildViewById(rootView, id);
      if (introPhotoLayout == null) {
        break missingId;
      }

      id = R.id.title_slide;
      TextView titleSlide = ViewBindings.findChildViewById(rootView, id);
      if (titleSlide == null) {
        break missingId;
      }

      return new SlideLayoutBinding((RelativeLayout) rootView, descriptionSlide, imageSlide,
          introPhotoLayout, titleSlide);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
