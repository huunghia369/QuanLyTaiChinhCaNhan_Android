// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTransactionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout cardFragmentTitleAndButtonBack;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final ImageButton transactionButtonCreate;

  @NonNull
  public final ImageButton transactionButtonGoBack;

  @NonNull
  public final TextView transactionNotice;

  @NonNull
  public final RecyclerView transactionRecycleView;

  private ActivityTransactionBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout cardFragmentTitleAndButtonBack, @NonNull SearchView searchView,
      @NonNull ImageButton transactionButtonCreate, @NonNull ImageButton transactionButtonGoBack,
      @NonNull TextView transactionNotice, @NonNull RecyclerView transactionRecycleView) {
    this.rootView = rootView;
    this.cardFragmentTitleAndButtonBack = cardFragmentTitleAndButtonBack;
    this.searchView = searchView;
    this.transactionButtonCreate = transactionButtonCreate;
    this.transactionButtonGoBack = transactionButtonGoBack;
    this.transactionNotice = transactionNotice;
    this.transactionRecycleView = transactionRecycleView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardFragmentTitleAndButtonBack;
      LinearLayout cardFragmentTitleAndButtonBack = ViewBindings.findChildViewById(rootView, id);
      if (cardFragmentTitleAndButtonBack == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.transactionButtonCreate;
      ImageButton transactionButtonCreate = ViewBindings.findChildViewById(rootView, id);
      if (transactionButtonCreate == null) {
        break missingId;
      }

      id = R.id.transactionButtonGoBack;
      ImageButton transactionButtonGoBack = ViewBindings.findChildViewById(rootView, id);
      if (transactionButtonGoBack == null) {
        break missingId;
      }

      id = R.id.transactionNotice;
      TextView transactionNotice = ViewBindings.findChildViewById(rootView, id);
      if (transactionNotice == null) {
        break missingId;
      }

      id = R.id.transactionRecycleView;
      RecyclerView transactionRecycleView = ViewBindings.findChildViewById(rootView, id);
      if (transactionRecycleView == null) {
        break missingId;
      }

      return new ActivityTransactionBinding((LinearLayout) rootView, cardFragmentTitleAndButtonBack,
          searchView, transactionButtonCreate, transactionButtonGoBack, transactionNotice,
          transactionRecycleView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
