// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView cardBalance;

  @NonNull
  public final TextView dashboardTitleGoal;

  @NonNull
  public final TextView fragmentHomeAuthName;

  @NonNull
  public final TextView fragmentHomeAuthRemaining;

  @NonNull
  public final ImageButton fragmentHomeButtonBudget;

  @NonNull
  public final ImageButton fragmentHomeButtonCategory;

  @NonNull
  public final ImageButton fragmentHomeButtonGoal;

  @NonNull
  public final ImageButton fragmentHomeButtonTransactions;

  @NonNull
  public final RecyclerView fragmentHomeRecentTransactions;

  @NonNull
  public final TextView fragmentHomeTitleCategory;

  @NonNull
  public final TextView fragmentHomeTitleExpenseStatistics;

  @NonNull
  public final TextView fragmentHomeTitleHeader;

  @NonNull
  public final TextView fragmentHomeTitleTransactions;

  @NonNull
  public final RelativeLayout headerBanner;

  @NonNull
  public final RelativeLayout headerBannerTitle;

  @NonNull
  public final TextView homeFragmentNotice;

  @NonNull
  public final TextView homeFragmentSeeAll;

  @NonNull
  public final SwipeRefreshLayout homeFragmentSwipeRefreshLayout;

  @NonNull
  public final RelativeLayout homeFragmentTransactionLayout;

  @NonNull
  public final FrameLayout imageLogo;

  @NonNull
  public final AppCompatImageView ivHaveNotif;

  @NonNull
  public final FrameLayout layoutNotif;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ImageView recentImage;

  @NonNull
  public final ImageButton ringBellBtn;

  @NonNull
  public final RecyclerView rvNotifications;

  @NonNull
  public final TextView totalRemaining;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull ImageView cardBalance,
      @NonNull TextView dashboardTitleGoal, @NonNull TextView fragmentHomeAuthName,
      @NonNull TextView fragmentHomeAuthRemaining, @NonNull ImageButton fragmentHomeButtonBudget,
      @NonNull ImageButton fragmentHomeButtonCategory, @NonNull ImageButton fragmentHomeButtonGoal,
      @NonNull ImageButton fragmentHomeButtonTransactions,
      @NonNull RecyclerView fragmentHomeRecentTransactions,
      @NonNull TextView fragmentHomeTitleCategory,
      @NonNull TextView fragmentHomeTitleExpenseStatistics,
      @NonNull TextView fragmentHomeTitleHeader, @NonNull TextView fragmentHomeTitleTransactions,
      @NonNull RelativeLayout headerBanner, @NonNull RelativeLayout headerBannerTitle,
      @NonNull TextView homeFragmentNotice, @NonNull TextView homeFragmentSeeAll,
      @NonNull SwipeRefreshLayout homeFragmentSwipeRefreshLayout,
      @NonNull RelativeLayout homeFragmentTransactionLayout, @NonNull FrameLayout imageLogo,
      @NonNull AppCompatImageView ivHaveNotif, @NonNull FrameLayout layoutNotif,
      @NonNull ProgressBar progressBar, @NonNull ImageView recentImage,
      @NonNull ImageButton ringBellBtn, @NonNull RecyclerView rvNotifications,
      @NonNull TextView totalRemaining) {
    this.rootView = rootView;
    this.cardBalance = cardBalance;
    this.dashboardTitleGoal = dashboardTitleGoal;
    this.fragmentHomeAuthName = fragmentHomeAuthName;
    this.fragmentHomeAuthRemaining = fragmentHomeAuthRemaining;
    this.fragmentHomeButtonBudget = fragmentHomeButtonBudget;
    this.fragmentHomeButtonCategory = fragmentHomeButtonCategory;
    this.fragmentHomeButtonGoal = fragmentHomeButtonGoal;
    this.fragmentHomeButtonTransactions = fragmentHomeButtonTransactions;
    this.fragmentHomeRecentTransactions = fragmentHomeRecentTransactions;
    this.fragmentHomeTitleCategory = fragmentHomeTitleCategory;
    this.fragmentHomeTitleExpenseStatistics = fragmentHomeTitleExpenseStatistics;
    this.fragmentHomeTitleHeader = fragmentHomeTitleHeader;
    this.fragmentHomeTitleTransactions = fragmentHomeTitleTransactions;
    this.headerBanner = headerBanner;
    this.headerBannerTitle = headerBannerTitle;
    this.homeFragmentNotice = homeFragmentNotice;
    this.homeFragmentSeeAll = homeFragmentSeeAll;
    this.homeFragmentSwipeRefreshLayout = homeFragmentSwipeRefreshLayout;
    this.homeFragmentTransactionLayout = homeFragmentTransactionLayout;
    this.imageLogo = imageLogo;
    this.ivHaveNotif = ivHaveNotif;
    this.layoutNotif = layoutNotif;
    this.progressBar = progressBar;
    this.recentImage = recentImage;
    this.ringBellBtn = ringBellBtn;
    this.rvNotifications = rvNotifications;
    this.totalRemaining = totalRemaining;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_balance;
      ImageView cardBalance = ViewBindings.findChildViewById(rootView, id);
      if (cardBalance == null) {
        break missingId;
      }

      id = R.id.dashboardTitleGoal;
      TextView dashboardTitleGoal = ViewBindings.findChildViewById(rootView, id);
      if (dashboardTitleGoal == null) {
        break missingId;
      }

      id = R.id.fragmentHomeAuthName;
      TextView fragmentHomeAuthName = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeAuthName == null) {
        break missingId;
      }

      id = R.id.fragmentHomeAuthRemaining;
      TextView fragmentHomeAuthRemaining = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeAuthRemaining == null) {
        break missingId;
      }

      id = R.id.fragmentHomeButtonBudget;
      ImageButton fragmentHomeButtonBudget = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeButtonBudget == null) {
        break missingId;
      }

      id = R.id.fragmentHomeButtonCategory;
      ImageButton fragmentHomeButtonCategory = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeButtonCategory == null) {
        break missingId;
      }

      id = R.id.fragmentHomeButtonGoal;
      ImageButton fragmentHomeButtonGoal = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeButtonGoal == null) {
        break missingId;
      }

      id = R.id.fragmentHomeButtonTransactions;
      ImageButton fragmentHomeButtonTransactions = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeButtonTransactions == null) {
        break missingId;
      }

      id = R.id.fragmentHomeRecentTransactions;
      RecyclerView fragmentHomeRecentTransactions = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeRecentTransactions == null) {
        break missingId;
      }

      id = R.id.fragmentHomeTitleCategory;
      TextView fragmentHomeTitleCategory = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeTitleCategory == null) {
        break missingId;
      }

      id = R.id.fragmentHomeTitleExpenseStatistics;
      TextView fragmentHomeTitleExpenseStatistics = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeTitleExpenseStatistics == null) {
        break missingId;
      }

      id = R.id.fragmentHomeTitleHeader;
      TextView fragmentHomeTitleHeader = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeTitleHeader == null) {
        break missingId;
      }

      id = R.id.fragmentHomeTitleTransactions;
      TextView fragmentHomeTitleTransactions = ViewBindings.findChildViewById(rootView, id);
      if (fragmentHomeTitleTransactions == null) {
        break missingId;
      }

      id = R.id.header_banner;
      RelativeLayout headerBanner = ViewBindings.findChildViewById(rootView, id);
      if (headerBanner == null) {
        break missingId;
      }

      id = R.id.header_banner_title;
      RelativeLayout headerBannerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerBannerTitle == null) {
        break missingId;
      }

      id = R.id.homeFragmentNotice;
      TextView homeFragmentNotice = ViewBindings.findChildViewById(rootView, id);
      if (homeFragmentNotice == null) {
        break missingId;
      }

      id = R.id.homeFragmentSeeAll;
      TextView homeFragmentSeeAll = ViewBindings.findChildViewById(rootView, id);
      if (homeFragmentSeeAll == null) {
        break missingId;
      }

      id = R.id.homeFragmentSwipeRefreshLayout;
      SwipeRefreshLayout homeFragmentSwipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (homeFragmentSwipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.homeFragmentTransactionLayout;
      RelativeLayout homeFragmentTransactionLayout = ViewBindings.findChildViewById(rootView, id);
      if (homeFragmentTransactionLayout == null) {
        break missingId;
      }

      id = R.id.image_logo;
      FrameLayout imageLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageLogo == null) {
        break missingId;
      }

      id = R.id.ivHaveNotif;
      AppCompatImageView ivHaveNotif = ViewBindings.findChildViewById(rootView, id);
      if (ivHaveNotif == null) {
        break missingId;
      }

      id = R.id.layoutNotif;
      FrameLayout layoutNotif = ViewBindings.findChildViewById(rootView, id);
      if (layoutNotif == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recentImage;
      ImageView recentImage = ViewBindings.findChildViewById(rootView, id);
      if (recentImage == null) {
        break missingId;
      }

      id = R.id.ringBellBtn;
      ImageButton ringBellBtn = ViewBindings.findChildViewById(rootView, id);
      if (ringBellBtn == null) {
        break missingId;
      }

      id = R.id.rvNotifications;
      RecyclerView rvNotifications = ViewBindings.findChildViewById(rootView, id);
      if (rvNotifications == null) {
        break missingId;
      }

      id = R.id.total_remaining;
      TextView totalRemaining = ViewBindings.findChildViewById(rootView, id);
      if (totalRemaining == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, cardBalance, dashboardTitleGoal,
          fragmentHomeAuthName, fragmentHomeAuthRemaining, fragmentHomeButtonBudget,
          fragmentHomeButtonCategory, fragmentHomeButtonGoal, fragmentHomeButtonTransactions,
          fragmentHomeRecentTransactions, fragmentHomeTitleCategory,
          fragmentHomeTitleExpenseStatistics, fragmentHomeTitleHeader,
          fragmentHomeTitleTransactions, headerBanner, headerBannerTitle, homeFragmentNotice,
          homeFragmentSeeAll, homeFragmentSwipeRefreshLayout, homeFragmentTransactionLayout,
          imageLogo, ivHaveNotif, layoutNotif, progressBar, recentImage, ringBellBtn,
          rvNotifications, totalRemaining);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
