// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardUpdateBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatButton cardUpdateButtonCreate;

  @NonNull
  public final ImageButton cardUpdateButtonGoBack;

  @NonNull
  public final ImageButton cardUpdateButtonMore;

  @NonNull
  public final EditText cardUpdateCardBalance;

  @NonNull
  public final EditText cardUpdateCardBank;

  @NonNull
  public final EditText cardUpdateCardDescription;

  @NonNull
  public final EditText cardUpdateCardNumber;

  @NonNull
  public final LinearLayout cardUpdateHeader;

  @NonNull
  public final TextView cardUpdateInputTitleArea;

  @NonNull
  public final ImageView cardUpdateReferencePhoto;

  @NonNull
  public final TextView cardUpdateTitle;

  private ActivityCardUpdateBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatButton cardUpdateButtonCreate, @NonNull ImageButton cardUpdateButtonGoBack,
      @NonNull ImageButton cardUpdateButtonMore, @NonNull EditText cardUpdateCardBalance,
      @NonNull EditText cardUpdateCardBank, @NonNull EditText cardUpdateCardDescription,
      @NonNull EditText cardUpdateCardNumber, @NonNull LinearLayout cardUpdateHeader,
      @NonNull TextView cardUpdateInputTitleArea, @NonNull ImageView cardUpdateReferencePhoto,
      @NonNull TextView cardUpdateTitle) {
    this.rootView = rootView;
    this.cardUpdateButtonCreate = cardUpdateButtonCreate;
    this.cardUpdateButtonGoBack = cardUpdateButtonGoBack;
    this.cardUpdateButtonMore = cardUpdateButtonMore;
    this.cardUpdateCardBalance = cardUpdateCardBalance;
    this.cardUpdateCardBank = cardUpdateCardBank;
    this.cardUpdateCardDescription = cardUpdateCardDescription;
    this.cardUpdateCardNumber = cardUpdateCardNumber;
    this.cardUpdateHeader = cardUpdateHeader;
    this.cardUpdateInputTitleArea = cardUpdateInputTitleArea;
    this.cardUpdateReferencePhoto = cardUpdateReferencePhoto;
    this.cardUpdateTitle = cardUpdateTitle;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardUpdateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardUpdateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card_update, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardUpdateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardUpdateButtonCreate;
      AppCompatButton cardUpdateButtonCreate = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateButtonCreate == null) {
        break missingId;
      }

      id = R.id.cardUpdateButtonGoBack;
      ImageButton cardUpdateButtonGoBack = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateButtonGoBack == null) {
        break missingId;
      }

      id = R.id.cardUpdateButtonMore;
      ImageButton cardUpdateButtonMore = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateButtonMore == null) {
        break missingId;
      }

      id = R.id.cardUpdateCardBalance;
      EditText cardUpdateCardBalance = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateCardBalance == null) {
        break missingId;
      }

      id = R.id.cardUpdateCardBank;
      EditText cardUpdateCardBank = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateCardBank == null) {
        break missingId;
      }

      id = R.id.cardUpdateCardDescription;
      EditText cardUpdateCardDescription = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateCardDescription == null) {
        break missingId;
      }

      id = R.id.cardUpdateCardNumber;
      EditText cardUpdateCardNumber = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateCardNumber == null) {
        break missingId;
      }

      id = R.id.cardUpdateHeader;
      LinearLayout cardUpdateHeader = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateHeader == null) {
        break missingId;
      }

      id = R.id.cardUpdateInputTitleArea;
      TextView cardUpdateInputTitleArea = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateInputTitleArea == null) {
        break missingId;
      }

      id = R.id.cardUpdateReferencePhoto;
      ImageView cardUpdateReferencePhoto = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateReferencePhoto == null) {
        break missingId;
      }

      id = R.id.cardUpdateTitle;
      TextView cardUpdateTitle = ViewBindings.findChildViewById(rootView, id);
      if (cardUpdateTitle == null) {
        break missingId;
      }

      return new ActivityCardUpdateBinding((RelativeLayout) rootView, cardUpdateButtonCreate,
          cardUpdateButtonGoBack, cardUpdateButtonMore, cardUpdateCardBalance, cardUpdateCardBank,
          cardUpdateCardDescription, cardUpdateCardNumber, cardUpdateHeader,
          cardUpdateInputTitleArea, cardUpdateReferencePhoto, cardUpdateTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
