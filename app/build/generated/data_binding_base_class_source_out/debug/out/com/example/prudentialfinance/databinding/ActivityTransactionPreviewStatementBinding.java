// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTransactionPreviewStatementBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView accountEmail;

  @NonNull
  public final TextView accountName;

  @NonNull
  public final TextView accountNameTitle;

  @NonNull
  public final TextView accountOwner;

  @NonNull
  public final TextView accountOwnerTitle;

  @NonNull
  public final TextView accountStatement;

  @NonNull
  public final TextView branchPrudentialBank;

  @NonNull
  public final TextView dateFrom;

  @NonNull
  public final TextView dateFromTitle;

  @NonNull
  public final TextView dateTitle;

  @NonNull
  public final TextView dateTo;

  @NonNull
  public final TextView dateToTitle;

  @NonNull
  public final TextView emailTitle;

  @NonNull
  public final TextView footer1;

  @NonNull
  public final TextView footer2;

  @NonNull
  public final TextView footer3;

  @NonNull
  public final TextView footer4;

  @NonNull
  public final ScrollView tableTransactionScrollView;

  @NonNull
  public final LinearLayout titleAndButtonBack;

  @NonNull
  public final TextView today;

  @NonNull
  public final ImageButton transactionPreviewButtonGoBack;

  @NonNull
  public final TableLayout transactionTable;

  @NonNull
  public final TextView vietnamCentralBank;

  private ActivityTransactionPreviewStatementBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView accountEmail, @NonNull TextView accountName,
      @NonNull TextView accountNameTitle, @NonNull TextView accountOwner,
      @NonNull TextView accountOwnerTitle, @NonNull TextView accountStatement,
      @NonNull TextView branchPrudentialBank, @NonNull TextView dateFrom,
      @NonNull TextView dateFromTitle, @NonNull TextView dateTitle, @NonNull TextView dateTo,
      @NonNull TextView dateToTitle, @NonNull TextView emailTitle, @NonNull TextView footer1,
      @NonNull TextView footer2, @NonNull TextView footer3, @NonNull TextView footer4,
      @NonNull ScrollView tableTransactionScrollView, @NonNull LinearLayout titleAndButtonBack,
      @NonNull TextView today, @NonNull ImageButton transactionPreviewButtonGoBack,
      @NonNull TableLayout transactionTable, @NonNull TextView vietnamCentralBank) {
    this.rootView = rootView;
    this.accountEmail = accountEmail;
    this.accountName = accountName;
    this.accountNameTitle = accountNameTitle;
    this.accountOwner = accountOwner;
    this.accountOwnerTitle = accountOwnerTitle;
    this.accountStatement = accountStatement;
    this.branchPrudentialBank = branchPrudentialBank;
    this.dateFrom = dateFrom;
    this.dateFromTitle = dateFromTitle;
    this.dateTitle = dateTitle;
    this.dateTo = dateTo;
    this.dateToTitle = dateToTitle;
    this.emailTitle = emailTitle;
    this.footer1 = footer1;
    this.footer2 = footer2;
    this.footer3 = footer3;
    this.footer4 = footer4;
    this.tableTransactionScrollView = tableTransactionScrollView;
    this.titleAndButtonBack = titleAndButtonBack;
    this.today = today;
    this.transactionPreviewButtonGoBack = transactionPreviewButtonGoBack;
    this.transactionTable = transactionTable;
    this.vietnamCentralBank = vietnamCentralBank;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTransactionPreviewStatementBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTransactionPreviewStatementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_transaction_preview_statement, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTransactionPreviewStatementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountEmail;
      TextView accountEmail = ViewBindings.findChildViewById(rootView, id);
      if (accountEmail == null) {
        break missingId;
      }

      id = R.id.accountName;
      TextView accountName = ViewBindings.findChildViewById(rootView, id);
      if (accountName == null) {
        break missingId;
      }

      id = R.id.accountNameTitle;
      TextView accountNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (accountNameTitle == null) {
        break missingId;
      }

      id = R.id.accountOwner;
      TextView accountOwner = ViewBindings.findChildViewById(rootView, id);
      if (accountOwner == null) {
        break missingId;
      }

      id = R.id.accountOwnerTitle;
      TextView accountOwnerTitle = ViewBindings.findChildViewById(rootView, id);
      if (accountOwnerTitle == null) {
        break missingId;
      }

      id = R.id.accountStatement;
      TextView accountStatement = ViewBindings.findChildViewById(rootView, id);
      if (accountStatement == null) {
        break missingId;
      }

      id = R.id.branchPrudentialBank;
      TextView branchPrudentialBank = ViewBindings.findChildViewById(rootView, id);
      if (branchPrudentialBank == null) {
        break missingId;
      }

      id = R.id.dateFrom;
      TextView dateFrom = ViewBindings.findChildViewById(rootView, id);
      if (dateFrom == null) {
        break missingId;
      }

      id = R.id.dateFromTitle;
      TextView dateFromTitle = ViewBindings.findChildViewById(rootView, id);
      if (dateFromTitle == null) {
        break missingId;
      }

      id = R.id.dateTitle;
      TextView dateTitle = ViewBindings.findChildViewById(rootView, id);
      if (dateTitle == null) {
        break missingId;
      }

      id = R.id.dateTo;
      TextView dateTo = ViewBindings.findChildViewById(rootView, id);
      if (dateTo == null) {
        break missingId;
      }

      id = R.id.dateToTitle;
      TextView dateToTitle = ViewBindings.findChildViewById(rootView, id);
      if (dateToTitle == null) {
        break missingId;
      }

      id = R.id.emailTitle;
      TextView emailTitle = ViewBindings.findChildViewById(rootView, id);
      if (emailTitle == null) {
        break missingId;
      }

      id = R.id.footer1;
      TextView footer1 = ViewBindings.findChildViewById(rootView, id);
      if (footer1 == null) {
        break missingId;
      }

      id = R.id.footer2;
      TextView footer2 = ViewBindings.findChildViewById(rootView, id);
      if (footer2 == null) {
        break missingId;
      }

      id = R.id.footer3;
      TextView footer3 = ViewBindings.findChildViewById(rootView, id);
      if (footer3 == null) {
        break missingId;
      }

      id = R.id.footer4;
      TextView footer4 = ViewBindings.findChildViewById(rootView, id);
      if (footer4 == null) {
        break missingId;
      }

      id = R.id.tableTransactionScrollView;
      ScrollView tableTransactionScrollView = ViewBindings.findChildViewById(rootView, id);
      if (tableTransactionScrollView == null) {
        break missingId;
      }

      id = R.id.titleAndButtonBack;
      LinearLayout titleAndButtonBack = ViewBindings.findChildViewById(rootView, id);
      if (titleAndButtonBack == null) {
        break missingId;
      }

      id = R.id.today;
      TextView today = ViewBindings.findChildViewById(rootView, id);
      if (today == null) {
        break missingId;
      }

      id = R.id.transactionPreviewButtonGoBack;
      ImageButton transactionPreviewButtonGoBack = ViewBindings.findChildViewById(rootView, id);
      if (transactionPreviewButtonGoBack == null) {
        break missingId;
      }

      id = R.id.transactionTable;
      TableLayout transactionTable = ViewBindings.findChildViewById(rootView, id);
      if (transactionTable == null) {
        break missingId;
      }

      id = R.id.vietnamCentralBank;
      TextView vietnamCentralBank = ViewBindings.findChildViewById(rootView, id);
      if (vietnamCentralBank == null) {
        break missingId;
      }

      return new ActivityTransactionPreviewStatementBinding((RelativeLayout) rootView, accountEmail,
          accountName, accountNameTitle, accountOwner, accountOwnerTitle, accountStatement,
          branchPrudentialBank, dateFrom, dateFromTitle, dateTitle, dateTo, dateToTitle, emailTitle,
          footer1, footer2, footer3, footer4, tableTransactionScrollView, titleAndButtonBack, today,
          transactionPreviewButtonGoBack, transactionTable, vietnamCentralBank);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
