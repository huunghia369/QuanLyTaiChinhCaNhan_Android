// Generated by view binder compiler. Do not edit!
package com.example.prudentialfinance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.prudentialfinance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCategoryExportBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final ImageButton btnMenu;

  @NonNull
  public final AppCompatButton exportBtn;

  @NonNull
  public final EditText numberOfRow;

  @NonNull
  public final Spinner sortByColumnSpinner;

  @NonNull
  public final Spinner sortByNatureSpinner;

  @NonNull
  public final TextView topTitle;

  private ActivityCategoryExportBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton backBtn, @NonNull ImageButton btnMenu,
      @NonNull AppCompatButton exportBtn, @NonNull EditText numberOfRow,
      @NonNull Spinner sortByColumnSpinner, @NonNull Spinner sortByNatureSpinner,
      @NonNull TextView topTitle) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.btnMenu = btnMenu;
    this.exportBtn = exportBtn;
    this.numberOfRow = numberOfRow;
    this.sortByColumnSpinner = sortByColumnSpinner;
    this.sortByNatureSpinner = sortByNatureSpinner;
    this.topTitle = topTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCategoryExportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCategoryExportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_category_export, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCategoryExportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.btnMenu;
      ImageButton btnMenu = ViewBindings.findChildViewById(rootView, id);
      if (btnMenu == null) {
        break missingId;
      }

      id = R.id.exportBtn;
      AppCompatButton exportBtn = ViewBindings.findChildViewById(rootView, id);
      if (exportBtn == null) {
        break missingId;
      }

      id = R.id.number_of_row;
      EditText numberOfRow = ViewBindings.findChildViewById(rootView, id);
      if (numberOfRow == null) {
        break missingId;
      }

      id = R.id.sortByColumnSpinner;
      Spinner sortByColumnSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sortByColumnSpinner == null) {
        break missingId;
      }

      id = R.id.sortByNatureSpinner;
      Spinner sortByNatureSpinner = ViewBindings.findChildViewById(rootView, id);
      if (sortByNatureSpinner == null) {
        break missingId;
      }

      id = R.id.topTitle;
      TextView topTitle = ViewBindings.findChildViewById(rootView, id);
      if (topTitle == null) {
        break missingId;
      }

      return new ActivityCategoryExportBinding((LinearLayout) rootView, backBtn, btnMenu, exportBtn,
          numberOfRow, sortByColumnSpinner, sortByNatureSpinner, topTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
